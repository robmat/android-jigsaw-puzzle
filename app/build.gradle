plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'com.google.gms.google-services'
}

android {
    defaultConfig {
        applicationId "com.batodev.jigsawpuzzle"
        minSdkVersion 24
        compileSdk = 36
        targetSdkVersion 36
        versionCode 27
        versionName "6.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    signingConfigs {
        prodSigned {
            // This configuration will be populated by the logic below
            // based on whether the keystore.properties file is found
            // and whether a debugProdSigned variant is being built.
        }
    }

    // Conditionally load keystore properties or set N/A for prodSigned
    // when a task related to debugProdSigned is being built.
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    if (keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        new FileInputStream(keystorePropertiesFile).withCloseable { fis ->
            keystoreProperties.load(fis)
        }
        android.signingConfigs.prodSigned {
            storeFile file(keystoreProperties.getProperty('storeFile'))
            storePassword keystoreProperties.getProperty('storePassword')
            keyAlias keystoreProperties.getProperty('keyAlias')
            keyPassword keystoreProperties.getProperty('keyPassword')
        }
    } else {
        logger.warn("Warning: keystore.properties not found. Do not build the 'debugProdSigned' variant.")
        android.signingConfigs.prodSigned {
            storeFile rootProject.file("N/A")
            storePassword "N/A"
            keyAlias "N/A"
            keyPassword "N/A"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // Note: The 'release' build type does not use signingConfigs.prodSigned in this setup.
            // If it were to, the above logic would need to consider it, or a separate signingConfig for release would be needed.
        }
        debugProdSigned {
            signingConfig signingConfigs.prodSigned
        }
    }
    namespace 'com.batodev.jigsawpuzzle'

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'androidx.exifinterface:exifinterface:1.4.1'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.google.android.gms:play-services-ads:24.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.github.bumptech.glide:glide:5.0.5'
    implementation 'com.caverock:androidsvg-aar:1.4'
    implementation 'com.google.android.play:review-ktx:2.0.2'
    implementation 'com.otaliastudios:zoomlayout:1.9.0'
    implementation 'com.google.code.gson:gson:2.13.2'
    implementation platform('com.google.firebase:firebase-bom:34.3.0')
    implementation 'com.google.firebase:firebase-analytics'
    ksp 'com.github.bumptech.glide:ksp:5.0.5'
    implementation("com.github.SMehranB:GlowButton:2.0.1")
    implementation "com.google.android.gms:play-services-games-v2:21.0.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:6.0.0-RC3"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:6.0.0-RC3"
    testImplementation "org.junit.jupiter:junit-jupiter-params:6.0.0-RC3"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:6.0.0-RC3"

    testImplementation "org.hamcrest:hamcrest:3.0"
}
